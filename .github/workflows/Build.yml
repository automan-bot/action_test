name: Build Prod

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
permissions:
  contents: write

# DOCKER_REGISTRY
# DOCKER_USERNAME
# DOCKER_PASSWORD
# DOCKER_NAMESPACE
# DOCKER_IMAGE_NAME

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_NAMESPACE: ${{ vars.DOCKER_NAMESPACE }}
      DOCKER_IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      # SSH_PORT: ${{ secrets.SSH_PORT }}
      # SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      # SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
    steps:
      - name: Set output
        id: vars
        run: |
          echo "short_ref=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: 显示环境变量
        run: |
          echo "环境变量：$DOCKER_USERNAME"
          echo "环境变量：$DOCKER_PASSWORD"
          echo "环境变量：$DOCKER_NAMESPACE"
          echo "环境变量：$DOCKER_IMAGE_NAME"
      - uses: actions/checkout@v2
      - name: 设置docker环境
        uses: docker/setup-buildx-action@v1

      - name: 登录docker仓库
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin $DOCKER_REGISTRY

      - name: build镜像并发布
        run: |
          docker buildx create --use
          docker buildx inspect --bootstrap
          echo "docker镜像tag"
          PUBLISH_URL=$DOCKER_NAMESPACE/$DOCKER_IMAGE_NAME:${{steps.vars.outputs.short_ref}}
          echo "publish_url:$PUBLISH_URL"
          docker buildx build --platform linux/amd64,linux/arm64 -t $PUBLISH_URL . --push
          docker buildx imagetools inspect $PUBLISH_URL
          docker images
      - name: 登录服务器拉取镜像并运行
        if: env.SSH_HOST != ''
        uses: garygrossgarten/github-action-ssh@release
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          command: |
            ls -al
            ifconfig
